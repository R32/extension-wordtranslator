// Generated by Haxe 5.0.0-alpha.1
(function ($global) { "use strict";
class ContentScript {
	static main() {
		if(document.body == null) {
			return;
		}
		let button = document.getElementById("bing_trans_btn");
		if(button != null) {
			return;
		}
		document.onpointerup = ContentScript.mouseup;
		let node = document.createElement("div");
		node.id = "bing_trans_btn";
		node.innerText = "翻译";
		button = node;
		button.style.cssText = "\r\n\t\t\tposition : absolute;\r\n\t\t\tpadding : 2px 4px;\r\n\t\t\tmargin : 0;\r\n\t\t\tdisplay : none;\r\n\t\t\tborder : 1px solid #00bcd4;\r\n\t\t\tborder-left-width : 12pt;\r\n\t\t\tbackground-color : inherit;\r\n\t\t\tfont-size : 10pt;\r\n\t\t\tcursor : pointer;\r\n\t\t\tcolor : inherit;\r\n\t\t\tz-index : 100;\r\n\t\t";
		button.onclick = function(e) {
			e.stopPropagation();
			if(e.layerX < devicePixelRatio * 16) {
				return;
			}
			if(ContentScript.srange != null) {
				let sel = document.getSelection();
				if(sel.anchorNode.parentNode == button && !sel.isCollapsed) {
					return;
				}
				sel.removeAllRanges();
				sel.addRange(ContentScript.srange);
			}
			chrome.runtime.sendMessage(ContentScript.query,ContentScript.update);
		};
		button.oncontextmenu = function(e) {
			let sel = document.getSelection();
			if(sel.anchorNode.parentNode == button && !sel.isCollapsed) {
				return;
			}
			ContentScript.halt(e);
			button.style.display = "none";
		};
		button.onpointerdown = function(e) {
			e.stopPropagation();
			if(!(e.layerX < devicePixelRatio * 16)) {
				return;
			}
			document.onselectstart = ContentScript.halt;
			ContentScript.btnpos.x = Std.parseInt(button.style.left) - e.screenX;
			ContentScript.btnpos.y = Std.parseInt(button.style.top) - e.screenY;
			document.removeEventListener("mousemove",ContentScript.onmove,true);
			document.addEventListener("mousemove",ContentScript.onmove,true);
			button.style.cursor = "move";
		};
		document.body.appendChild(button);
		ContentScript.button = button;
	}
	static update(zhs) {
		if(zhs != null) {
			ContentScript.button.innerText = zhs;
		}
	}
	static onmove(e) {
		e.stopPropagation();
		ContentScript.button.style.left = ContentScript.btnpos.x + e.screenX + "px";
		ContentScript.button.style.top = ContentScript.btnpos.y + e.screenY + "px";
	}
	static halt(e) {
		e.preventDefault();
		e.stopPropagation();
	}
	static mouseup(e) {
		let button = ContentScript.button;
		if(document.onselectstart != null) {
			document.onselectstart = null;
			document.removeEventListener("mousemove",ContentScript.onmove,true);
			button.style.cursor = "pointer";
			return;
		}
		let sel = document.getSelection();
		if(sel.isCollapsed || sel.anchorNode.parentNode == button) {
			return;
		}
		let value = sel.toString();
		if(ContentScript.query.value == value || value.length < 2) {
			return;
		}
		button.style.display = "inline-block";
		button.style.left = e.pageX + "px";
		button.style.top = Math.max(e.pageY - 50,0) + "px";
		ContentScript.query.value = value;
		ContentScript.srange = sel.getRangeAt(0);
	}
}
class Std {
	static parseInt(x) {
		let v = parseInt(x);
		if(isNaN(v)) {
			return null;
		}
		return v;
	}
}
{
}
ContentScript.query = { value : ""};
ContentScript.btnpos = { x : 0, y : 0};
ContentScript.main();
})(window);
