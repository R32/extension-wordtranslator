// Generated by Haxe 5.0.0-alpha.1
(function ($global) { "use strict";
class Background {
	static NOP() {
	}
	static loadpage(href,callback) {
		chrome.tabs.query({ url : href},function(list) {
			if(list.length > 0) {
				chrome.tabs.update(list[0].id,{ active : true},callback);
				return;
			}
			chrome.tabs.create({ url : href},callback);
		});
	}
	static main() {
		let lazySendResponse = null;
		let prevMsg = null;
		chrome.runtime.onMessage.addListener(function(query,sender,sendResponse) {
			if(query.respone) {
				if(lazySendResponse != null) {
					lazySendResponse(query.value);
				}
				lazySendResponse = null;
				return false;
			}
			let same = prevMsg == query.value;
			if(same) {
				sendResponse(null);
			} else {
				lazySendResponse = sendResponse;
				prevMsg = query.value;
			}
			chrome.tabs.query({ url : Background.bingurl + "*"},function(list) {
				if(list.length == 0) {
					if(lazySendResponse != null) {
						lazySendResponse(null);
					}
					lazySendResponse = null;
					prevMsg = null;
					Background.loadpage(Background.bingurl);
					return;
				}
				chrome.scripting.executeScript({ target : { tabId : list[0].id}, args : [same ? null : prevMsg], func : function(ens) {
					hookbt.run(ens);
				}},Background.NOP);
			});
			return lazySendResponse != null;
		});
		chrome.webNavigation.onDOMContentLoaded.addListener(function(t) {
			switch(t.url.substring(0,t.url.indexOf(":"))) {
			case "file":case "http":case "https":
				break;
			default:
				return;
			}
			chrome.scripting.executeScript({ target : { tabId : t.tabId}, files : [t.url.substring(0,Background.bingurl.length) != Background.bingurl ? "js/content-script.js" : "js/hook-bingtranslator.js"]},Background.NOP);
		});
		chrome.action.onClicked.addListener(function(tab) {
			Background.loadpage(chrome.runtime.getURL("options.html"));
		});
	}
}
{
}
Background.bingurl = "https://cn.bing.com/translator";
Background.main();
})(globalThis);
