// Generated by Haxe 5.0.0-alpha.1+bdae3e7
(function ($global) { "use strict";
function main() {
	let tabid = -1;
	let NOP = function(_) {
	};
	let BTURL = "https://" + (chrome.i18n.getUILanguage() == "zh-CN" ? "cn." : "") + "bing.com/translator";
	let enable = true;
	let lazy_reply = null;
	let flush = function(v) {
		if(lazy_reply) {
			lazy_reply(v);
			lazy_reply = null;
		}
	};
	let run = function(msg) {
		if(tabid < 0) {
			tab_query(msg);
			return;
		}
		chrome.tabs.sendMessage(tabid,msg).then(flush).catch(flush);
	};
	let tab_query = function(msg) {
		chrome.tabs.query({ url : "https://" + "*." + "bing.com/translator" + "*"},function(tabs) {
			let tab = tabs[0];
			if(tab == null || tab.status == "unloaded") {
				flush(null);
				if(tab) {
					chrome.tabs.update(tab.id,{ active : true});
				} else {
					chrome.tabs.create({ url : BTURL, pinned : true});
				}
				return;
			}
			tabid = tab.id;
			run(msg);
		});
	};
	chrome.storage.local.get("disabled",function(res) {
		enable = !res["disabled"];
	});
	chrome.runtime.onMessage.addListener(function(msg,_,reply) {
		switch(msg[0]) {
		case 1:
			if(lazy_reply) {
				lazy_reply(null);
			}
			lazy_reply = reply;
			run(msg);
			return true;
		case 2:
			let args = msg[1].split(":");
			switch(args[0]) {
			case "disabled":
				enable = args[1] != "true";
				break;
			case "voices":
				if(tabid != -1) {
					chrome.tabs.sendMessage(tabid,msg).catch(NOP);
				}
				break;
			default:
			}
			break;
		}
		return false;
	});
	chrome.webNavigation.onDOMContentLoaded.addListener(function(t) {
		let sub = t.url.substring(8,32);
		let ishook = sub.indexOf("bing.com/translator") >= 0;
		if(!(enable || ishook)) {
			return;
		}
		if(ishook && tabid == -1) {
			tabid = t.tabId;
		}
		let script = ishook ? "js/hook-bingtranslator.js" : "js/content-script.js";
		chrome.scripting.executeScript({ target : { tabId : t.tabId}, files : [script]}).catch(NOP);
	});
	chrome.tabs.onRemoved.addListener(function(id,_) {
		if(id == tabid) {
			tabid = -1;
		}
	});
}
{
}
main();
})(globalThis);
