// Generated by Haxe 5.0.0-alpha.1+bdae3e7
(function ($global) { "use strict";
var tmp_ens = null;
var lst_ens = null;
var lazy_reply = null;
function flush(v) {
	lst_ens = tmp_ens;
	if(lazy_reply) {
		lazy_reply(v);
		lazy_reply = null;
	}
}
function polling(lvl) {
	tid = -1;
	let cur = TOUT[FDOUT];
	if(lvl < 0) {
		tmp_ens = null;
		cur = chrome.i18n.getMessage("TIMEOUT");
	} else {
		let i = 0;
		let len = cur.length;
		while(i < len && cur.charCodeAt(i) == 32) ++i;
		if(i == len || cur.endsWith("...")) {
			tid = setTimeout(polling,600,lvl - 1);
			return;
		}
	}
	flush(cur);
}
var sound = null;
function run(ens) {
	let diff = lst_ens != ens;
	if(diff) {
		tmp_ens = ens;
		sound = detects(ens);
		TIN[FDIN] = ens;
		TIN.dispatchEvent(paste);
		if(tid >= 0) {
			clearTimeout(tid);
		}
		tid = setTimeout(polling,500,10);
	} else {
		lazy_reply = null;
	}
	if(sound && level < 255) {
		TPLAY.click();
	}
	return diff;
}
function detects(ens) {
	let n = level & 255;
	if(n == 0) {
		return false;
	}
	if(n > 3) {
		return true;
	}
	let i = 0;
	let len = ens.length;
	let count = (1 << n) - 1;
	while(i < len && ens.charCodeAt(i) == 32) ++i;
	while(len > i && ens.charCodeAt(len - 1) == 32) --len;
	if(i < len && ens.charCodeAt(i) > 255) {
		return len - i <= count + 1;
	}
	while(i < len) {
		if(ens.charCodeAt(i) == 32) {
			if(count-- == 0) {
				return false;
			}
		}
		++i;
	}
	return true;
}
function main() {
	chrome.storage.local.get("voices",function(res) {
		level = res["voices"] ? (res["voices"] | 0) : 2;
	});
	chrome.runtime.onMessage.addListener(function(msg,_,reply) {
		switch(msg[0]) {
		case 1:
			if(lazy_reply) {
				lazy_reply(null);
			}
			lazy_reply = reply;
			return run(msg[1]);
		case 2:
			let args = msg[1].split(":");
			if(args[0] == "voices") {
				level = (args[1] | 0);
			}
			break;
		}
		return false;
	});
}
{
}
var TIN = document.getElementById("tta_input_ta");
var TOUT = document.getElementById("tta_output_ta");
var TPLAY = document.getElementById("tta_playiconsrc");
var FDIN = TIN.tagName != "TEXTAREA" ? "innerText" : "value";
var FDOUT = TOUT.tagName != "TEXTAREA" ? "innerText" : "value";
var tid = -1;
var level = 2;
var paste = new InputEvent("input",{ bubbles : true});
main();
})(window);
