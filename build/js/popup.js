// Generated by Haxe 5.0.0-alpha.1+cc105eb
(function ($global) { "use strict";
function NOP(_) {
}
function childpos(elem) {
	let index = 0;
	let prev = elem.previousSibling;
	while(prev != null) {
		if(prev.nodeType == 1) {
			++index;
		}
		prev = prev.previousSibling;
	}
	return index;
}
function set_redirect(enable) {
	let obj = { };
	obj[enable ? "enableRulesetIds" : "disableRulesetIds"] = ["redirect-googleapi"];
	chrome.declarativeNetRequest.updateEnabledRulesets(obj).catch(NOP);
}
function update(label,checked,extra) {
	if(checked) {
		label.setAttribute("checked","");
	} else {
		label.removeAttribute("checked");
	}
	let menu = document.querySelector("#menumain");
	let ui_redirect = menu.children[1];
	let ui_enable = menu.children[0];
	let ui_sound = menu.children[2];
	switch(childpos(label)) {
	case 0:
		if(label == ui_enable) {
			let disabled = !checked;
			setattr(ui_sound,"disabled",disabled);
			setattr(ui_redirect,"disabled",disabled);
			chrome.storage.local.set({"disabled" : disabled},function() {
				chrome.runtime.sendMessage([2,"disabled" + ":" + (disabled == null ? "null" : "" + disabled)]).catch(NOP);
			});
			if(disabled) {
				set_redirect(false);
			} else {
				chrome.storage.local.get(["redirect"],function(res) {
					set_redirect(res["redirect"]);
				});
			}
		}
		break;
	case 1:
		if(label == ui_redirect) {
			chrome.storage.local.set({"redirect" : checked},function() {
				set_redirect(checked);
			});
		}
		break;
	case 2:
		chrome.storage.local.set({"voices" : extra},function() {
			chrome.runtime.sendMessage([2,"voices" + ":" + extra]).catch(NOP);
		});
		break;
	default:
	}
}
function setattr(label,value,enable) {
	if(enable) {
		label.setAttribute(value,"");
		label.querySelector("input").setAttribute(value,"");
	} else {
		label.removeAttribute(value);
		label.querySelector("input").removeAttribute(value);
	}
}
function main() {
	let menu = document.querySelector("#menumain");
	menu.onclick = function(e) {
		let target = e.target;
		let parent = target.parentElement;
		let voices = menu.children[2];
		if(parent == menu && target == voices) {
			e.preventDefault();
			let input = voices.querySelector("input");
			let checked = !voices.hasAttribute("checked");
			let value = checked ? input.value : "" + ((input.value | 0) + 256);
			update(voices,checked,value);
			return;
		}
		if(target.type == "checkbox") {
			update(parent,target.checked);
		} else if(parent == voices) {
			update(voices,true,target.value);
		}
	};
	chrome.storage.local.get(["voices","disabled","redirect"],function(res) {
		let menu = document.querySelector("#menumain");
		let ui_voices = menu.children[2];
		let ui_redirect = menu.children[1];
		if(res["disabled"]) {
			setattr(menu.children[0],"checked",false);
			setattr(ui_redirect,"disabled",true);
			setattr(ui_voices,"disabled",true);
		}
		if(res["redirect"]) {
			setattr(ui_redirect,"checked",true);
			set_redirect(true);
		}
		if(res["voices"] != null) {
			let n = (res["voices"] | 0);
			if(n > 255) {
				setattr(ui_voices,"checked",false);
			}
			ui_voices.querySelector("input").value = "" + (n & 255);
		}
	});
}
{
}
main();
})(window);
