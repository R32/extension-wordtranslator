// Generated by Haxe 5.0.0-alpha.1+2d9ed26
(function ($global) { "use strict";
class Popup {
	static childIndex(elem) {
		let index = 0;
		let prev = elem.previousSibling;
		while(prev != null) {
			if(prev.nodeType == 1) {
				++index;
			}
			prev = prev.previousSibling;
		}
		return index;
	}
	static flushRedirect(enable) {
		let obj = { };
		obj[enable ? "enableRulesetIds" : "disableRulesetIds"] = ["redirect-googleapi"];
		chrome.declarativeNetRequest.updateEnabledRulesets(obj).catch(function(_) {
		});
	}
	static update(label,checked,extra) {
		if(checked) {
			label.setAttribute("checked","");
		} else {
			label.removeAttribute("checked");
		}
		let menu = document.querySelector("#menumain");
		let ui_redirect = menu.children[1];
		let ui_enable = menu.children[0];
		let ui_sound = menu.children[2];
		switch(Popup.childIndex(label)) {
		case 0:
			if(label == ui_enable) {
				let disabled = !checked;
				Popup.setAttribute(ui_sound,"disabled",disabled);
				Popup.setAttribute(ui_redirect,"disabled",disabled);
				chrome.storage.local.set({ disabled : disabled},function() {
					chrome.runtime.sendMessage([2,"disabled" + ":" + (disabled == null ? "null" : "" + disabled)]);
				});
				if(disabled) {
					Popup.flushRedirect(false);
				} else {
					chrome.storage.local.get(["redirect"],function(stored) {
						Popup.flushRedirect(stored.redirect);
					});
				}
			}
			break;
		case 1:
			if(label == ui_redirect) {
				chrome.storage.local.set({ redirect : checked},function() {
					Popup.flushRedirect(checked);
				});
			}
			break;
		case 2:
			chrome.storage.local.set({ voices : extra},function() {
				chrome.runtime.sendMessage([2,"voices" + ":" + extra]);
			});
			break;
		default:
		}
	}
	static setAttribute(label,value,enable) {
		if(enable) {
			label.setAttribute(value,"");
			label.querySelector("input").setAttribute(value,"");
		} else {
			label.removeAttribute(value);
			label.querySelector("input").removeAttribute(value);
		}
	}
	static main() {
		let menu = document.querySelector("#menumain");
		menu.onclick = function(e) {
			let target = e.target;
			let parent = target.parentElement;
			let voices = menu.children[2];
			if(parent == menu && target == voices) {
				e.preventDefault();
				let input = voices.querySelector("input");
				let checked = !voices.hasAttribute("checked");
				let value = checked ? input.value : "" + ((input.value | 0) + 256);
				Popup.update(voices,checked,value);
				return;
			}
			if(target.type == "checkbox") {
				Popup.update(parent,target.checked);
			} else if(parent == voices) {
				Popup.update(parent,true,target.value);
			}
		};
		chrome.storage.local.get(["voices","disabled","redirect"],function(stores) {
			let menu = document.querySelector("#menumain");
			let ui_voices = menu.children[2];
			let ui_redirect = menu.children[1];
			if(stores.disabled) {
				Popup.setAttribute(menu.children[0],"checked",false);
				Popup.setAttribute(ui_redirect,"disabled",true);
				Popup.setAttribute(ui_voices,"disabled",true);
			}
			if(stores.redirect) {
				Popup.setAttribute(ui_redirect,"checked",true);
				Popup.flushRedirect(true);
			}
			if(stores.voices != null) {
				let n = (stores.voices | 0);
				if(n > 255) {
					Popup.setAttribute(ui_voices,"checked",false);
				}
				ui_voices.querySelector("input").value = "" + (n & 255);
			}
		});
	}
}
{
}
Popup.main();
})(window);
